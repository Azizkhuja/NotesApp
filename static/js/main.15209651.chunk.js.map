{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Container","breakpointCols","default","1100","700","columnClassName","map","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","background","width","padding","spacing","drawer","drawerPaper","root","active","appbar","toolbar","mixins","date","flexGrow","marginLeft","Layout","children","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlined","AppBar","Toolbar","format","Date","src","Drawer","anchor","paper","List","item","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15209651.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Avatar, IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: note => {\n      if (note.category === \"work\") {\n        return yellow[700];\n      }\n      if (note.category === \"money\") {\n        return green[500];\n      }\n      if (note.category === \"todos\") {\n        return pink[500];\n      }\n      return blue[500];\n    }\n  }\n});\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note);\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={<Avatar className={classes.avatar}>{note.category[0].toUpperCase()}</Avatar>}\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {note.details}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport NoteCard from \"../components/NoteCard\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/notes\")\n      .then(res => res.json())\n      .then(data => setNotes(data));\n  }, []);\n\n  const handleDelete = async id => {\n    await fetch(\"http://localhost:8000/notes/\" + id, {\n      method: \"DELETE\"\n    });\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  return (\n    <Container>\n      <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Typography, Button, Container, TextField, Radio } from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\"\n  }\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  const [category, setCategory] = useState(\"todos\");\n\n  const hadleSubmit = e => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n\n    if (title && details) {\n      fetch(\"http://localhost:8000/notes\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({ title, details, category })\n      }).then(() => history.push(\"/\"));\n    }\n  };\n  return (\n    <Container>\n      <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\" gutterBottom>\n        Create a New Note\n      </Typography>\n      <form noValidate autoComplete=\"off\" onSubmit={hadleSubmit}>\n        <TextField onChange={e => setTitle(e.target.value)} className={classes.field} label=\"Note Title\" variant=\"outlined\" color=\"secondary\" fullWidth required error={titleError} />\n        <TextField onChange={e => setDetails(e.target.value)} className={classes.field} label=\"Details\" variant=\"outlined\" color=\"secondary\" multiline rows={4} fullWidth required error={detailsError} />\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={e => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button type=\"submit\" color=\"secondary\" variant=\"contained\" endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { AddCircleOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { format } from \"date-fns\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => {\n  return {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3)\n    },\n    drawer: {\n      width: drawerWidth\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    root: {\n      display: \"flex\"\n    },\n    active: {\n      background: \"#f4f4f4\"\n    },\n    title: {\n      padding: theme.spacing(4)\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1\n    },\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\"\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlined color=\"secondary\" />,\n      path: \"/create\"\n    }\n  ];\n  return (\n    <div className={classes.root}>\n      {/* AppBar */}\n      <AppBar elevation={0} className={classes.appbar}>\n        <Toolbar>\n          <Typography className={classes.date}>Today is the{format(new Date(), \"do MMMM Y\")}</Typography>\n          <Typography>Mario</Typography>\n          <Avatar src=\"/mario-av.png\" className={classes.avatar} />\n        </Toolbar>\n      </AppBar>\n\n      {/* Side drawer */}\n      <Drawer className={classes.drawer} variant=\"permanent\" anchor=\"left\" classes={{ paper: classes.drawerPaper }}>\n        <div>\n          <Typography className={classes.title} variant=\"h5\">\n            Nonja Notes\n          </Typography>\n        </div>\n        {/* List / links */}\n        <List>\n          {menuItems.map(item => (\n            <ListItem button key={item.text} onClick={() => history.push(item.path)} className={location.pathname === item.path ? classes.active : null}>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notes from \"./pages/Notes\";\nimport Create from \"./pages/Create\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fefefe\"\n    },\n    secondary: purple\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}